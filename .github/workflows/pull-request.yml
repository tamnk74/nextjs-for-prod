name: Pull Request

on:
  pull_request:
    branches:
      - 'main'
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  lint:
    name: ‚¨£ ESLint
    runs-on: ubuntu-latest

    strategy:
      matrix:
        pnpm-version: [9.x]
        node-version: [20.x, 22.x]

    steps:
      - uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
            
      - name: Install dependencies
        run: npm install -g corepack@latest && corepack enable pnpm && pnpm install --frozen-lockfile

      - uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Lint
        run: pnpm run lint
      

  type-check:
    name:  ¶ TypeScript
    runs-on: ubuntu-latest

    strategy:
      matrix:
        pnpm-version: [9.x]
        node-version: [20.x, 22.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
            
      - name: Install dependencies
        run: npm install -g corepack@latest && corepack enable pnpm && pnpm install --frozen-lockfile

      - uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            node-modules-

      - name: üîé Type check
        run: pnpm run type-check --if-present


  unit-test:
    name: ‚ö° Unit Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        pnpm-version: [9.x]
        node-version: [20.x, 22.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
            
      - name: Install dependencies
        run: npm install -g corepack@latest && corepack enable pnpm && pnpm install --frozen-lockfile

      - uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            node-modules-

      - name: Run Unit Test
        run: pnpm test -- --ci --coverage
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  # playwright:
  #   name: üé≠ Playwright
  #   runs-on: ubuntu-latest
  #   services:
  #     postgres:
  #       image: postgres:12
  #       env:
  #         POSTGRES_USER: postgres
  #         POSTGRES_PASSWORD: postgres
  #         POSTGRES_DB: testdb
  #       ports:
  #         - 5432:5432
  #   steps:
  #     - name: ‚¨áÔ∏è Checkout repo
  #       uses: actions/checkout@v3

  #     - name: ‚éî Setup node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 20

  #     - name: üì• Download deps
  #       uses: bahmutov/npm-install@v1

  #     - name: üåê Install Playwright Browsers
  #       run: npx playwright install --with-deps

  #     - name: üõ† Setup Database
  #       run: npm run prisma:wipe
  #       env:
  #         DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb

  #     - name: üé≠ Playwright Run
  #       run: npx playwright test
  #       env:
  #         DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb

  #     - name: üì∏ Playwright Screenshots
  #       uses: actions/upload-artifact@v4
  #       if: failure()
  #       with:
  #         name: playwright-report
  #         path: playwright-report/
  #         retention-days: 30